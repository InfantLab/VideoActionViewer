/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/jobs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Jobs
         * @description List jobs with pagination and filtering.
         *
         *     Args:
         *         page: Page number (1-based)
         *         per_page: Items per page
         *         status_filter: Optional status filter
         *
         *     Returns:
         *         Paginated list of jobs
         */
        get: operations["list_jobs_api_v1_jobs__get"];
        put?: never;
        /**
         * Submit Job
         * @description Submit a video processing job.
         *
         *     Args:
         *         video: Video file to process
         *         config: Optional JSON configuration string
         *         selected_pipelines: Optional comma-separated pipeline names
         *
         *     Returns:
         *         Job information including ID and status
         */
        post: operations["submit_job_api_v1_jobs__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/jobs/{job_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Job Status
         * @description Get job status and details.
         *
         *     Args:
         *         job_id: Job ID to query
         *
         *     Returns:
         *         Job information including current status
         */
        get: operations["get_job_status_api_v1_jobs__job_id__get"];
        put?: never;
        post?: never;
        /**
         * Cancel Job
         * @description Cancel/delete a job.
         *
         *     Args:
         *         job_id: Job ID to cancel
         */
        delete: operations["cancel_job_api_v1_jobs__job_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pipelines/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Pipelines
         * @description List all available pipelines.
         *
         *     Returns:
         *         List of available pipelines with their configurations
         */
        get: operations["list_pipelines_api_v1_pipelines__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pipelines/{pipeline_name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Pipeline Info
         * @description Get detailed information about a specific pipeline.
         *
         *     Args:
         *         pipeline_name: Name of the pipeline
         *
         *     Returns:
         *         Detailed pipeline information
         */
        get: operations["get_pipeline_info_api_v1_pipelines__pipeline_name__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/pipelines/{pipeline_name}/validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Validate Pipeline Config
         * @description Validate a pipeline configuration.
         *
         *     Args:
         *         pipeline_name: Name of the pipeline
         *         config: Configuration to validate
         *
         *     Returns:
         *         Validation result
         */
        post: operations["validate_pipeline_config_api_v1_pipelines__pipeline_name__validate_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/system/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Detailed Health Check
         * @description Detailed system health check.
         *
         *     Returns:
         *         Comprehensive system health information
         */
        get: operations["detailed_health_check_api_v1_system_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/system/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get System Metrics
         * @description Get system performance metrics.
         *
         *     Returns:
         *         System performance and usage metrics
         */
        get: operations["get_system_metrics_api_v1_system_metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/system/config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get System Config
         * @description Get current system configuration.
         *
         *     Returns:
         *         System configuration information (non-sensitive)
         */
        get: operations["get_system_config_api_v1_system_config_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/system/database": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Database Info Endpoint
         * @description Get database information and statistics.
         *
         *     Returns:
         *         Database configuration and statistics
         */
        get: operations["get_database_info_endpoint_api_v1_system_database_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Health Check
         * @description Basic health check endpoint.
         */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_submit_job_api_v1_jobs__post */
        Body_submit_job_api_v1_jobs__post: {
            /**
             * Video
             * Format: binary
             * @description Video file to process
             */
            video: string;
            /**
             * Config
             * @description JSON configuration
             */
            config?: string | null;
            /**
             * Selected Pipelines
             * @description Comma-separated pipeline names
             */
            selected_pipelines?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * JobListResponse
         * @description Response model for job listing.
         */
        JobListResponse: {
            /** Jobs */
            jobs: components["schemas"]["JobResponse"][];
            /** Total */
            total: number;
            /** Page */
            page: number;
            /** Per Page */
            per_page: number;
        };
        /**
         * JobResponse
         * @description Response model for job information.
         */
        JobResponse: {
            /** Id */
            id: string;
            /** Status */
            status: string;
            /** Video Path */
            video_path?: string | null;
            /** Config */
            config?: {
                [key: string]: unknown;
            } | null;
            /** Selected Pipelines */
            selected_pipelines?: string[] | null;
            /** Created At */
            created_at?: string | null;
            /** Completed At */
            completed_at?: string | null;
            /** Error Message */
            error_message?: string | null;
        };
        /**
         * PipelineInfo
         * @description Information about an available pipeline.
         */
        PipelineInfo: {
            /** Name */
            name: string;
            /** Description */
            description: string;
            /** Enabled */
            enabled: boolean;
            /** Config Schema */
            config_schema: {
                [key: string]: unknown;
            };
        };
        /**
         * PipelineListResponse
         * @description Response for pipeline listing.
         */
        PipelineListResponse: {
            /** Pipelines */
            pipelines: components["schemas"]["PipelineInfo"][];
            /** Total */
            total: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    list_jobs_api_v1_jobs__get: {
        parameters: {
            query?: {
                page?: number;
                per_page?: number;
                status_filter?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobListResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    submit_job_api_v1_jobs__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_submit_job_api_v1_jobs__post"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_job_status_api_v1_jobs__job_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                job_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["JobResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cancel_job_api_v1_jobs__job_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                job_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_pipelines_api_v1_pipelines__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PipelineListResponse"];
                };
            };
        };
    };
    get_pipeline_info_api_v1_pipelines__pipeline_name__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                pipeline_name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PipelineInfo"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    validate_pipeline_config_api_v1_pipelines__pipeline_name__validate_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                pipeline_name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    [key: string]: unknown;
                };
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    detailed_health_check_api_v1_system_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_system_metrics_api_v1_system_metrics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_system_config_api_v1_system_config_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_database_info_endpoint_api_v1_system_database_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
